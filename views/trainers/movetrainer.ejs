<h1>Currently practicing <%= lineName %></h1>
<% if(locals.sidelineName) { %>
<h2>Sideline <%= sidelineName %></h2>
<% } %>
<script src='../public/scripts/chess.js'></script>
<script src='../public/scripts/board.js'></script>
<link rel="stylesheet" href="../public/css/board.css">

<div id='parent' display='flex'>	
	<div id='boardDiv' float='left'>
		<div id='board'></div>
	</div>
	<button id='showAnswer' onclick='showMove()'>Show move</button>
</div>

<div id='endDisplay'>
	<h2>End of line</h2>
	<button onClick="window.location.reload();">Practice again</button>
</div>

<script>
	const correctColor = '#24852d';
	const wrongColor = '#c41c14';
	<% if(locals.side) { %>
		const side = 'black';
	<% } else { %>
		const side = 'white';
	<% } %> 	


	const board = new Board({width: 400, orientation: side});
	board.setPosition('<%= startingPosition %>');
	const positions = [];
	const linePositions = '<%= positions %>'.split(',');
	<% if(locals.sidelinePositions) { %>
		var sidelineBool = false;
		for(var i in linePositions) {
			const lineposition = linePositions[i];
			if(lineposition === '<%= sidelineStartingPosition %>') {
				sidelineBool = true;
				break;
			}
			positions.push(lineposition);
		}
		const sidelinePositions = '<%= sidelinePositions %>'.split(',');
		if(sidelineBool) {
			for(var i in sidelinePositions) {
				const lineposition = sidelinePositions[i];
				positions.push(lineposition);
			}
		}
	<% } else { %>
		linePositions.forEach((lineposition) => { positions.push(lineposition); })
	<% } %>

	var currentmove = 0;

	if(side == 'black') computerMove();

	document.addEventListener('boardMove', async function(e){
		if(board.getFen() == positions[currentmove + 1]) {
			//correct move
			currentmove ++;
			board.updateColors(correctColor, board.lightColor);
			
			setTimeout(() => { board.resetColors(); }, 600);

			if(currentmove >= positions.length - 1) endOfLine();
			else computerMove();
		} else {
			board.setPosition(positions[currentmove]);
			board.updateColors(wrongColor, board.lightColor);
			setTimeout(() => { board.resetColors(); }, 600);
		}
	})

	function showMove() {
		currentmove++;
		if(currentmove >= positions.length - 1) endOfLine();
		else {
		board.setPosition(positions[currentmove]);
		computerMove;
		}		
	}

	function computerMove()
	{
		if(currentmove >= positions.length - 1) endOfLine();
		else {
			currentmove++;
			if(currentmove >= positions.length - 1) endOfLine();
			else
			board.setPosition(positions[currentmove]);
		}
	}

	const endDisplay = document.getElementById('endDisplay');
	console.log(endDisplay);
	endDisplay.style.display = "none";

	function endOfLine() {
		endDisplay.style.display = "block";
	}
</script>
